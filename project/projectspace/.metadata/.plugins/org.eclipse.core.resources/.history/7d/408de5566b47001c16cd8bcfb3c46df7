package com.git.receive.reservation;

import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.SseEmitter;


@RestController
public class ReservationController {
	private ReservationService service;
	private ReservationRepository repo;
	
	@Autowired
	public ReservationController(ReservationService service, ReservationRepository repo) {
		this.service = service;
		this.repo = repo;
	}
	@GetMapping(value="reservation")
	public List<Reservation> getReservation(){
		return repo.findAll(Sort.by("id").descending());
	}
//	@GetMapping("/event/{clientId}")
//	public SseEmitter connectEvent(@PathVariable String clientId) {
//
//		// Event를 발생시키는 객체를 생성
//
//		// 기존에 해당 clientId emitter 있으면 삭제
//		SseEmitter emitter = service.getEmitter(clientId);
//		if (emitter != null) {
//			service.removeEmitter(clientId);
//		}
//
//		// timeout 시간을 무한으로 처리, 클라이언트에서 다시 요청을 보내지 않음
//		emitter = new SseEmitter(-1L);
//
//		// 서비스 객체에 emitter 객체를 넘겨줌
//		service.putEmitter(clientId, emitter);
//
//		try {
//			emitter.send("connected");
////			emitter.send(SseEmitter.event().name("connect").data("connect").build());
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//
//		}
//
//		return emitter;
//	}
	
}
