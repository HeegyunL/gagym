package com.git.receive.reservation;

import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.stereotype.Service;

import com.git.receive.reservation.event.RequestReservation;

@Service
public class ReservationService {
	ReservationRepository repo;
	
	public ReservationService(ReservationRepository repo) {
		this.repo = repo;
	}
	// 데이터가 갱신되는 시점에 캐시 삭제
		// ex) 타 시스템에서 데이터를 받아와서 저장함
		@CacheEvict(value="reservation", allEntries = true)
	@RabbitListener(queues="service.reservation.create")
	public void receiveReservation(RequestReservation receiveReservation) {
		saveReservation(receiveReservation);
	}
	
	public Reservation saveReservation(RequestReservation receiveReservation) {
		Reservation reservation = Reservation.builder()
				.memberName(receiveReservation.getMemberName())
				.memberPhone(receiveReservation.getMemberPhone())
				.memberRequest(receiveReservation.getMemberRequest())
				.gymName(receiveReservation.getGymName())
				.trainerName(receiveReservation.getTrainerName())
				.boughtService(receiveReservation.getBoughtService())
				.build();
		repo.save(reservation);
		return reservation;
	}
}
