https://github.com/kdkcom1234/git2021/tree/master/1-html-css/lecture-1

링크 - a태그
이미지 - img태그
데이터형식 - table태그
---------------------------
//일반 문서

shift + home : 현재 위치부터 행의 가장 앞까지 선택

shift + end : 현재 위치부터 행의 가장 뒤까지 선택

//개발 툴

ctrl + /  : 해당 행에 주석처리

윈도우 + . : 이모지
스타일 - selector, 컬러

anchor : 닻(배가 항구에 정박할 때 닻을 놓음)
navigate : 
- 링크로 이동
- 바다에서 항해

href=hyper-link reference

내부 URL
URL (Unified Resource Locator)
 :  파일의 위치를 표기하는 공통적인 방법

id : 영어로만 띄어쓰기 없음
내부링크에는 http://주소 쓰지 말 것
영어, 띄어쓰기 하고 싶으면 대시, 하이픈(-)
- 개발자들 사이에 관례적인 표기법
- 웹 상의 파일, 주소 표기

이미지 너비
pc면 1200 이하
태블릿, 작은화면 768~996

이미지 저장 (오른쪽 안눌릴때)
f12눌러서 왼쪽 위에 화살표 이용하여 코드따기

구글 ->image to base64검색 
파일 - > base64 문자열 = 용량이 33퍼센트 증가
데이터 URL = 이미지를 문자화해서 집어넣은것

UI 못하면 프론트 탈락
REST API, ORM
API GATEWAY
SERVICE REGISTY
SERCUIT BREAKER
IN-MEMORY DATABASE, KEY-VALUE, NOSQL
CACHE DB, SESSSION, EBENT STREAMING, SERVERLESS
UML(CLASS, SEQUENCE, DEPLOYMENT)
JENKINS

백엔드 
1.업무 이해도(domain knowledge)

프론트엔드(페이스북)
-react, redux, Material-Ui
vue	vuex
angular
-플랫폼확장(모바일앱, 데스크탑)

백엔드(넷플릭스)
-규모확장

프론트엔드
-javascript, react,html/css

백엔드
-java, spring, database

금융권
-카드, 보험, 은행, 증권

프론트엔드
-프로그래밍테크니션

백엔드
-백엔드 엔지니어
소프트웨어 엔지니어(자바웹 개발자, 풀스택 개발자)

<tr>사이에는 내용을 넣지 않는다.
콘텐츠를 넣고 싶다면 '무조건'<td>안에만 넣는다.

포트폴리오
- 내용이 없다 -> 회사에서 준비한 질문으로 면접
-기술내용, 특징 

B2D : business to Developer (CTO,CIO)

16진수법으로도 투명도 가능(뒤에 2자리)

*모델, 마들( model)
- 구조, 형식
- structure

*박스모델
-html 요소(element)의 박스 구조 형식

*컨텐트,패딩, 보더 : 태그 영역
마진 : 외곽(기본적으로 0.5rem으로 설정되있다,)


    ul,ol {
      /* 기본 왼쪽 패딩이 2.5rem(4px) */
      padding :0px;
      /* margin : 0px; */
      padding-left:1.12rem;

      /* 리스트 앞의 표시 형식을 없앰 */
      /* list-style : none; */
    }

*border-box 로 기본값으로 설정해놓고 content-box를 필요할때마다 사용한다.

*ctrl +h : 검색

*8px 글자크기의 0.5
16px 글자크기의 1

*id : element(요소)의 이름
-> 어떤 태그에 이름을 뭘로 할까?
 -> 이 태그에 내용을 재료목이지
class :  style의 이름
->이 클래스의 스타일은 뭘까??
 -> 이 클래스의 스타일은 배경이 노란색

*CSS
: 상위 요소의 스타일보다
하위요소의 스타일이 우선이다
:광범위범위보다 좁은 범위가 우선이다
 
*코딩테스트 1일 = 1~2개 (30분~1시간30분정도 걸림)
=> 문제 읽는 감을 유지하기 위함
초급~중급
(좋은 회사는 고급 수준의 평가 문제를 냄 3~5일 정도 걸리는)

이력서/포트폴리오 -> 코딩테스트2개씩  (2시간)-> 알고리즘/디자인패턴 기본 (2시간)
->폴트폴리오 내용 완벽 숙지(2시간)

코테 사이트 
codesignal: 아케이드/ 코어 문제풀기
프로그래머스 : 카카오문제등 풀어보기
codegym : 자바 기초~고급 문제 / 6만원

static : 정적임, 멈춰있음
dynamic : 동적임, 움직임

position : static
-> block , inline

*생활코딩 : 
-개발자 관점 아님
일반인 대상 교육

*조코딩 : 
-절대보지마세요.

*command pattern - facebook

*factory method pattern,
 adapter pattern, 
decoration pattern, 
dependecy injection pattern 
- google

dependency injection 
-spring, pivotal

*프레임워크 를 개발
프레임워크 로 개발

*html,css/javascript (초급)
-> react(중급) 
	->typescript 
		-> webpack,babel(build) - 고급
			-> react-native, electoron -고급

java , os, database - 초급
	->spring cloud - 중급(중고급)
		-> devops(배포/ 운영), jenkins/container

*HTML : 문서의 구조
CSS : 문서의 스타일
Javascript : 문서의 상호작용(interaction) 

1.컨셉 기획서
-컨셉트 : 내용
-비주얼무드보드
2. 만든거(UI디자인)
3.디자인 가이드
-기본폰트
-강조어
-색상 5개,,,

float : 전체 레이아웃
display : 세부요소 

grid : 전체 레이아웃
flewbox : 세부요소 

*query : 질의어 ->물어보는 말

*vw(viewport width ) : 뷰포트 가로 대비 비율
vh(viewport height) : 뷰포트 세로 대비 비율

*px , %
em, rem <- 폰트 상대 크기
vh, vw <- 뷰포트 상대 크기

*평가문제
section 콘텐츠 영역 분할
grid, flexbox, media query  1/2/3열
색상값,폰트
header, nav, aside,footer
이모지, 아이콘, 링크(a), 
a #->내부이동

1.강의 내용 습득->프로젝스 > 포트폴리오>면접
2.코딩테스트 1일1문제

----------------
자바스크립트

1. 프로그래밍
- 변수, 연산자, 조건문, 반복문, 함수
    -> 객체 , 배열
->자료구조/ 알고리즘
(프로그래밍 언어에 내포 되어있음)
-------백엔드, 프론트엔드
2. HTML 요소 조작

3. 네트워크 처리, 파일처리, 저장소 처리


변수 ( variable)
 - 데이터를 저장할 메모리 공간에 이름을 붙인 것
- 붙인 이름으로 먼가를 써먹음
  -> 데이터를 저장, 꺼내오기, 삭제, 수정하고


정수 : 소수점이 없음
	음수 0 양수

실수 : 소숫점이 있음

숫자형 : number

javascript의 기본적인 자료형
. number : 100, 123.10, infinity
. string : 'a', "one", 'two' . `javascript`
.boolean : true / false
.undefined : 할당이 안 됨, 자료형을 알 수 없음
.null : 값이 비어 있음.

형-변환(type conversion)
: 문자 -> 숫자 -> 불린 -> 문자
: number, srting, boolean, undefined, null
: 사용자입력값 문자 -> 숫자로 변환
:사용자 입력값 숫자 -> 불린(true / false)

*NaN : Not a Number -> number

단항 : (unary)
2항 : binary
연산자 : operator

"*".repeat(5) -> *****