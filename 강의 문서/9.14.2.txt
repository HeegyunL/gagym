web server - HTML, CSS,JS = 정적컨텐츠(서버에서 처리하지 않음 , 렌더링이나 계산을 하지 않음)
WAS(Web Application Server) = 동적 컨텐츠 (jsp,java 등), 서버에서 처리하는 
톰캣 = web server / WAS 둘 다 가능
1.스레드 생성 -> 콘트롤러에 접근

concurrent = 동시성 처리가 가능
put(key , value)	키로 접근하는 것들을
get(key)		다른 스레드가 키로 접근 못하도록 lock

//추가
put(key,value)
remove(key)

insert - 테이블 잠금
update/delete - 행 잠금

//TDD 개발 스타일
사용자 needs -> 요구사항(requirement, backlog)->설계(design, architecture)
> 코드stub(뼈대) -> 테스트케이스(유즈케이스)-> 구현 -> 테스트케이스통과
		  액터(수행자)
		  이벤트 흐름(처리절차)
		  사전조건, 예상결과

//테스트
애플리케이션/시스템의 품질을 측정할 수 있는 유일한 방법


integration test
- 백엔드 관점으로 봤을 때는 API를 테스트 하는 것
-  

Unit Test

react app
-CRA
-npm build 
   => Webpack(module bundler, 모듈 합치기)